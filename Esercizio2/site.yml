- name: Check servizi e arresto 
  hosts: fe
  connection: local
  tasks:
 
#     - name: Controlla e ferma i servizi se attivi
#       systemd_service:  ##cambiare lo stato di ciascun servizio nella lista a stopped.
#         name: "{{ item }}"
#         state: stopped
#       register: service_status  ##risultato  operazioni
#       loop:
#         - docker
#         - httpd
#         - pippod
#       ignore_errors: true
  
# ##tasks stampa 
#     - name: Stampa questo  messaggio se il servizio  è in esecuzione
#       debug:
#         msg: "{{ item.item }} è stato fermato"
#       when: item.changed
#       loop: "{{ service_status.results }}"
     
#     - name: Stampa questo messaggio se il servizio non è in esecuzione
#       debug:
#         msg: "{{ item.item }} non è in esecuzione o non esiste "
#       when: not item.changed
#       loop: "{{ service_status.results }}"

    - name: Controlla e ferma i servizi se attivi    
      systemd_service:
        name: "{{ item }}"
        state: stopped
      loop:
        - docker
        - httpd
        - pippod  
      ignore_errors: true
      register: service_status

    - name: Stampa messaggio  
      ansible.builtin.debug:  
        msg: "{{ item.item }} : {{ 'fermato' if item.changed else 'non presente/ non in esecuzione' }}"
      loop: "{{ service_status.results }}"

#esempio inclusione roles
    - name: test
      include_role: 
        name: common